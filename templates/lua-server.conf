        location / {
            root   html;
            index  index.html index.htm;
            # Set some nginx variables we'll later set in lua.  By exposing these variables to nginx we can use them for routing and logging outside of Lua.
            set $app_port nil;
            access_by_lua '

                local app_name = ngx.req.get_headers()["Host"]
                local app_port = ngx.shared.upstream_curr_ports:get(app_name)

                if not (app_port == undef) then
                        ngx.var.app_port = "127.0.0.1:" .. app_port
                else
                        ngx.log(ngx.ERR, string.format("Request for unknown vhost: %s", app_name))
                        ngx.exit(ngx.HTTP_BAD_REQUEST)
                end
           ';
                proxy_pass http://$app_port; # Proxy to the upstream server set previously by lua

                proxy_set_header           X-Real-IP   $remote_addr;
                proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header           X-Forwarded-Proto  $scheme;
                proxy_set_header           X-Forwarded-Server  $host;
                proxy_set_header           X-Forwarded-Host  $host;
                proxy_set_header           Host  $host;

                client_max_body_size       <%= @client_max_body_size %>;
                client_body_buffer_size    128k;

                proxy_connect_timeout      90;
                proxy_send_timeout         90;
                proxy_read_timeout         90;

                proxy_buffer_size          4k;
                proxy_buffers              4 32k;
                proxy_busy_buffers_size    64k;
                proxy_temp_file_write_size 64k;
                }
                error_page   500 502 503 504  /50x.html;
                location = /50x.html {
                    root   html;
                }
